resources:
- repo: self

name: $(Major).$(Minor).$(rev:r)  # build numbering format

trigger: none # will disable CI build

pr: # will trigger on PR
  branches:
    include: [ master ] # branch names which will trigger a build
  paths:
    include: [ /Extensions/FileUtilities ] # file paths which must match to trigger a build

pool:
  name: Hosted VS2017
  demands:
  - npm
  - node.js
  - DotNetFramework

variables:
  ExtensionRoot: 'Extensions/FileUtilities'

steps:
- task: qetza.replacetokens.replacetokens-task.replacetokens@1
  displayName: 'Replace tokens in **\*task.json'
  inputs:
    rootDirectory: '$(ExtensionRoot)'
    targetFiles: '**\*task.json'

# standard block for Node
- task: Npm@0
  displayName: 'npm install XmlFileUpdateTask'
  inputs:
    cwd: '$(ExtensionRoot)\XmlFileUpdateTask'

- task: jessehouwing.vsts-snyk.vsts-snyk.Snyk@2
  displayName: 'Scan for vulnerable package dependencies in XmlFileUpdateTask'
  inputs:
    cwd: '$(ExtensionRoot)\XmlFileUpdateTask\'
    file: package.json
    monitor: true
    endpoint: 'Snky (Github RFennell)'

- task: Npm@0
  displayName: 'npm run build XmlFileUpdateTask'
  inputs:
    cwd: '$(ExtensionRoot)\XmlFileUpdateTask'
    command: run
    arguments: build

- task: Npm@0
  displayName: 'npm run test tNetCoreAssembliesTask'
  inputs:
    cwd: '$(ExtensionRoot)\XmlFileUpdateTask'
    command: run
    arguments: test

- task: PublishTestResults@2
  displayName: 'Publish Test Results  XmlFileUpdateTask'
  inputs:
    testResultsFiles: '$(ExtensionRoot)\XmlFileUpdateTask\test-output\test-results.xml'
    testRunTitle: 'XmlFileUpdateTask'

- task: Npm@0
  displayName: 'npm run package XmlFileUpdateTask'
  inputs:
    cwd: '$(ExtensionRoot)\XmlFileUpdateTask'
    command: run
    arguments: package
# end node block

- task: PowerShell@1
  displayName: 'PowerShell Script - fix spaces in path'
  inputs:
    scriptType: inlineScript
    workingFolder: '$(ExtensionRoot)\XmlFileUpdateTask\task\node_modules'
    inlineScript: |
     dir -recurse | where {-Not $_.PsIscontainer -AND $_.name -match " "} | foreach { 
     $New=$_.name.Replace(" ","_")
     Rename-Item -path $_.Fullname -newname $New -passthru
     }

- task: ms-devlabs.vsts-developer-tools-build-tasks.package-extension-build-task.PackageVSTSExtension@1
  displayName: 'Package and Publish VSTS Extension: PROD'
  inputs:
    rootFolder: '$(ExtensionRoot)'
    outputPath: '$(Build.ArtifactStagingDirectory)\vsix'
    publisherId: '$(PackageID)'
    extensionId: '$(ExtensionID)'
    extensionVersion: '$(Build.BuildNumber)'
    updateTasksVersion: true
    extensionVisibility: public

- task: CopyFiles@2
  displayName: 'Copy Docs'
  inputs:
    SourceFolder: Extensions/FileUtilities
    Contents: |
     readme.md
     vss-extension.json
     **\task.json
    TargetFolder: '$(Build.ArtifactStagingDirectory)\vsix'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: vsix'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)\vsix'
    ArtifactName: vsix
